package org.ziglang

import org.jetbrains.annotations.NonNls

@NonNls const val ZIG_NAME = "Zig"
@NonNls const val ZIG_EXTENSION = "zig"
@NonNls const val ZIG_WEBSITE = "https://ziglang.org"

@NonNls const val ZIG_CONTEXT_ID = "ZIG_CONTEXT_ID"
@NonNls const val ZIG_PLUGIN_ID = "org.ziglang"
@NonNls const val ZIG_RUN_CONFIG_ID = "ZIG_RUN_CONFIG_ID"

@NonNls const val ZIG_COMMENT_START = "//"

@NonNls const val ZIG_INSTALL_PREFIX = "--zig-install-prefix"

@JvmField val builtinFunctions = listOf(
		"Frame",
		"TagType",
		"This",
		"Type",
		"TypeOf",
		"addWithOverflow",
		"alignCast",
		"alignOf",
		"as",
		"asyncCall",
		"atomicLoad",
		"atomicRmw",
		"atomicStore",
		"bitCast",
		"bitOffsetOf",
		"bitReverse",
		"bitSizeOf",
		"boolToInt",
		"breakpoint",
		"byteOffsetOf",
		"byteSwap",
		"cDefine",
		"cImport",
		"cInclude",
		"cUndef",
		"call",
		"ceil",
		"clz",
		"cmpxchgStrong",
		"cmpxchgWeak",
		"compileError",
		"compileLog",
		"cos",
		"ctz",
		"divExact",
		"divFloor",
		"divTrunc",
		"embedFile",
		"enumToInt",
		"errSetCast",
		"errorName",
		"errorReturnTrace",
		"errorToInt",
		"exp",
		"exp2",
		"export",
		"fabs",
		"fence",
		"field",
		"fieldParentPtr",
		"floatCast",
		"floatToInt",
		"floor",
		"frame",
		"frameAddress",
		"frameSize",
		"hasDecl",
		"hasField",
		"import",
		"intCast",
		"intToEnum",
		"intToError",
		"intToFloat",
		"intToPtr",
		"log",
		"log10",
		"log2",
		"memcpy",
		"memset",
		"mod",
		"mulAdd",
		"mulWithOverflow",
		"panic",
		"popCount",
		"ptrCast",
		"ptrToInt",
		"reduce",
		"rem",
		"returnAddress",
		"round",
		"setAlignStack",
		"setCold",
		"setEvalBranchQuota",
		"setFloatMode",
		"setRuntimeSafety",
		"shlExact",
		"shlWithOverflow",
		"shrExact",
		"shuffle",
		"sin",
		"sizeOf",
		"splat",
		"sqrt",
		"src",
		"subWithOverflow",
		"tagName",
		"trunc",
		"truncate",
		"typeInfo",
		"typeName",
		"unionInit",
		"wasmMemoryGrow",
		"wasmMemorySize"
)
